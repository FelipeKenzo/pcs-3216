Listing for source file "./filesystem/test.asm".
Note: memory is Little-Endian.

                    ORG  $100   
100 01 0E           JP   INIT   ; goes to init
102 00 00   CONST1  CON  $0     ; const1 = 0
104 00 01   CONST2  CON  $1     ; const2 = 1
106 FF FF   CONST3  CON  $FFFF  ; const3 = $FFFF (-1)
108 0E F0   CONST4  CON  $EF0   ; const4 = $EF0
10A 00 03   CONST5  CON  $3     ; const5 = 3
10C 00 00     VAR1  CON  $0     ; var1 = 0
10E 81 04     INIT  LD   CONST2 ; ac = 1
110 11 18           JZ   JZ     ; jump to "jz" if acc = 0 (shouldn't)
112 81 02           LD   CONST1 ; ac = 0
114 11 18           JZ   JZ     ; jump to "jz" if acc = 0 (should)
116 41 06           ADD  CONST3 
118 21 20       JZ  JN   JN     ; jump to "jn" if acc < 0 (shouldn't)
11A 81 06           LD   CONST3 ; ac = -1
11C 21 20           JN   JN     ; jump to "jn" if acc < 0 (should)
11E 41 06           ADD  CONST3 
120 41 08       JN  ADD  CONST4 ; ac += $EFO (expected to result in $EEF)
122 51 08           SUB  CONST4 ; ac -= $EF0 (expected to result in $FFFF)
124 61 06           MUL  CONST3 ; ac *= $FFFF (expected to result in 1)
126 81 08           LD   CONST4 ; ac = $EF0
128 71 0A           DIV  CONST5 ; ac /= 3 (expected $4FA)
12A 91 0C           MM   VAR1   ; var1 = ac
12C 81 02           LD   CONST1 ; ac = 0
12E 81 0C           LD   VAR1   ; ac = var1 (should be $4FA)
130 A3 00           SC   SUBR   ; branch to subr (pc should be $300)     
132 E0 00           PD   $0     ; Print Data
134 D0 00           GD   $0     ; get data
136 E0 00           PD   $0     
138 C1 0E           HM   INIT   ; Halts Machine
                    ORG  $300   
300 41 04     SUBR  ADD  CONST2 
302 B0 00           RS   $0     
                    END  INIT   ; Indica INIC como endereco de partida do programa;
